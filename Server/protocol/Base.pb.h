// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Base.proto

#ifndef PROTOBUF_INCLUDED_Base_2eproto
#define PROTOBUF_INCLUDED_Base_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_Base_2eproto 

namespace protobuf_Base_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_Base_2eproto
namespace Base {
class msgHeartbeartClient;
class msgHeartbeartClientDefaultTypeInternal;
extern msgHeartbeartClientDefaultTypeInternal _msgHeartbeartClient_default_instance_;
class msgHeartbeartServer;
class msgHeartbeartServerDefaultTypeInternal;
extern msgHeartbeartServerDefaultTypeInternal _msgHeartbeartServer_default_instance_;
class msgNull;
class msgNullDefaultTypeInternal;
extern msgNullDefaultTypeInternal _msgNull_default_instance_;
}  // namespace Base
namespace google {
namespace protobuf {
template<> ::Base::msgHeartbeartClient* Arena::CreateMaybeMessage<::Base::msgHeartbeartClient>(Arena*);
template<> ::Base::msgHeartbeartServer* Arena::CreateMaybeMessage<::Base::msgHeartbeartServer>(Arena*);
template<> ::Base::msgNull* Arena::CreateMaybeMessage<::Base::msgNull>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace Base {

// ===================================================================

class msgNull : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Base.msgNull) */ {
 public:
  msgNull();
  virtual ~msgNull();

  msgNull(const msgNull& from);

  inline msgNull& operator=(const msgNull& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msgNull(msgNull&& from) noexcept
    : msgNull() {
    *this = ::std::move(from);
  }

  inline msgNull& operator=(msgNull&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msgNull& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgNull* internal_default_instance() {
    return reinterpret_cast<const msgNull*>(
               &_msgNull_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(msgNull* other);
  friend void swap(msgNull& a, msgNull& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msgNull* New() const final {
    return CreateMaybeMessage<msgNull>(NULL);
  }

  msgNull* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msgNull>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msgNull& from);
  void MergeFrom(const msgNull& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgNull* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Base.msgNull)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_Base_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msgHeartbeartServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Base.msgHeartbeartServer) */ {
 public:
  msgHeartbeartServer();
  virtual ~msgHeartbeartServer();

  msgHeartbeartServer(const msgHeartbeartServer& from);

  inline msgHeartbeartServer& operator=(const msgHeartbeartServer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msgHeartbeartServer(msgHeartbeartServer&& from) noexcept
    : msgHeartbeartServer() {
    *this = ::std::move(from);
  }

  inline msgHeartbeartServer& operator=(msgHeartbeartServer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msgHeartbeartServer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgHeartbeartServer* internal_default_instance() {
    return reinterpret_cast<const msgHeartbeartServer*>(
               &_msgHeartbeartServer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(msgHeartbeartServer* other);
  friend void swap(msgHeartbeartServer& a, msgHeartbeartServer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msgHeartbeartServer* New() const final {
    return CreateMaybeMessage<msgHeartbeartServer>(NULL);
  }

  msgHeartbeartServer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msgHeartbeartServer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msgHeartbeartServer& from);
  void MergeFrom(const msgHeartbeartServer& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgHeartbeartServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 dwTimestamp = 1;
  bool has_dwtimestamp() const;
  void clear_dwtimestamp();
  static const int kDwTimestampFieldNumber = 1;
  ::google::protobuf::uint64 dwtimestamp() const;
  void set_dwtimestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Base.msgHeartbeartServer)
 private:
  void set_has_dwtimestamp();
  void clear_has_dwtimestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 dwtimestamp_;
  friend struct ::protobuf_Base_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class msgHeartbeartClient : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:Base.msgHeartbeartClient) */ {
 public:
  msgHeartbeartClient();
  virtual ~msgHeartbeartClient();

  msgHeartbeartClient(const msgHeartbeartClient& from);

  inline msgHeartbeartClient& operator=(const msgHeartbeartClient& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  msgHeartbeartClient(msgHeartbeartClient&& from) noexcept
    : msgHeartbeartClient() {
    *this = ::std::move(from);
  }

  inline msgHeartbeartClient& operator=(msgHeartbeartClient&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const msgHeartbeartClient& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const msgHeartbeartClient* internal_default_instance() {
    return reinterpret_cast<const msgHeartbeartClient*>(
               &_msgHeartbeartClient_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(msgHeartbeartClient* other);
  friend void swap(msgHeartbeartClient& a, msgHeartbeartClient& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline msgHeartbeartClient* New() const final {
    return CreateMaybeMessage<msgHeartbeartClient>(NULL);
  }

  msgHeartbeartClient* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<msgHeartbeartClient>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const msgHeartbeartClient& from);
  void MergeFrom(const msgHeartbeartClient& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(msgHeartbeartClient* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 dwTimestamp = 1;
  bool has_dwtimestamp() const;
  void clear_dwtimestamp();
  static const int kDwTimestampFieldNumber = 1;
  ::google::protobuf::uint64 dwtimestamp() const;
  void set_dwtimestamp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:Base.msgHeartbeartClient)
 private:
  void set_has_dwtimestamp();
  void clear_has_dwtimestamp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  ::google::protobuf::uint64 dwtimestamp_;
  friend struct ::protobuf_Base_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// msgNull

// -------------------------------------------------------------------

// msgHeartbeartServer

// optional uint64 dwTimestamp = 1;
inline bool msgHeartbeartServer::has_dwtimestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msgHeartbeartServer::set_has_dwtimestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msgHeartbeartServer::clear_has_dwtimestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msgHeartbeartServer::clear_dwtimestamp() {
  dwtimestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_dwtimestamp();
}
inline ::google::protobuf::uint64 msgHeartbeartServer::dwtimestamp() const {
  // @@protoc_insertion_point(field_get:Base.msgHeartbeartServer.dwTimestamp)
  return dwtimestamp_;
}
inline void msgHeartbeartServer::set_dwtimestamp(::google::protobuf::uint64 value) {
  set_has_dwtimestamp();
  dwtimestamp_ = value;
  // @@protoc_insertion_point(field_set:Base.msgHeartbeartServer.dwTimestamp)
}

// -------------------------------------------------------------------

// msgHeartbeartClient

// optional uint64 dwTimestamp = 1;
inline bool msgHeartbeartClient::has_dwtimestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void msgHeartbeartClient::set_has_dwtimestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void msgHeartbeartClient::clear_has_dwtimestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void msgHeartbeartClient::clear_dwtimestamp() {
  dwtimestamp_ = GOOGLE_ULONGLONG(0);
  clear_has_dwtimestamp();
}
inline ::google::protobuf::uint64 msgHeartbeartClient::dwtimestamp() const {
  // @@protoc_insertion_point(field_get:Base.msgHeartbeartClient.dwTimestamp)
  return dwtimestamp_;
}
inline void msgHeartbeartClient::set_dwtimestamp(::google::protobuf::uint64 value) {
  set_has_dwtimestamp();
  dwtimestamp_ = value;
  // @@protoc_insertion_point(field_set:Base.msgHeartbeartClient.dwTimestamp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Base

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_Base_2eproto
