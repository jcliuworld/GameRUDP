#ifndef _aIni_H__
#define _aIni_H__

/**
* @file aIni.h
* @brief ini 文件读写类
* @author jc.liuworld@hotmail.com
* @version 
* @date 2015-03-27
*/

#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <map>
#include <cstdlib>
#include <algorithm>
#include <cstring>
#include <sstream>
#include <sys/stat.h>
#include <sys/types.h>
#include <exception>



using namespace std;


class iniNode;

class aIni {

	private:

		fstream file;

		map<string, iniNode*> nodes;

		string parent;

		string lastName;



		string filePath;

		struct stat fileStats;

	public:

		friend ostream& operator << (ostream &out, aIni &c);

		aIni(string);

		~aIni();

		iniNode& operator [] (string);
		iniNode& operator [] (int);

		operator string();

		void addOrReplace(string);

		void addOrReplaceFile(string);

		void refresh();

		int count();

};



class iniNode {

	private:

		iniNode* parent;

		string name;

		string value;

		bool exist;

		bool array;

		void prepareString(string &s);



		int arrayLength;

	public:

		friend ostream& operator << (ostream &out, iniNode &c);

		friend ostream& operator << (ostream &out, iniNode *c);

		map<string, iniNode*> child;

		iniNode(string, iniNode* parent = NULL);

		iniNode(string, string, iniNode* parent = NULL);



		void add(const char*);

		void add(string&); // metoda do dodawania stringa do configa

		void add(string, string);



		void copy(iniNode*);



		void setValue(string);

		void setExist(bool);

		int count();



		iniNode& operator [] (string);

		iniNode& operator [] (int);



		iniNode& operator = (string);

		iniNode& operator = (int);

		iniNode& operator = (unsigned int);

		iniNode& operator = (long int);

		iniNode& operator = (double);

		iniNode& operator = (float);



		bool empty();

		operator string();

		string toString(int, string s = "");

		string path();

		string getName();

		string* toArray();



		// gettery

		string get() ;

		string get(string);

		int get(int);

		double get(double);

		float get(float);



		string getS();

		string getS(string);



		int getI();

		int getI(int);



		float getF() ;

		float getF(float);



		double getD();

		double getD(double);

};



#endif

